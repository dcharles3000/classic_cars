{"version":3,"sources":["components/ui/Notifications.js","utils/index.js","utils/constants.js","components/ui/Identicon.js","components/Wallet.js","components/minter/Cover.js","utils/minter.js","components/minter/nfts/Add.js","components/minter/nfts/Popup.js","components/minter/nfts/Card.js","components/ui/Loader.js","components/minter/nfts/index.js","hooks/useMinterContract.js","hooks/useContract.js","App.js","hooks/useBalance.js","reportWebVitals.js","index.js"],"names":["Notification","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","NotificationSuccess","text","className","NotificationError","DefaultProps","defaultProps","truncateAddress","address","slice","length","formatBigNumber","num","shiftedBy","toFixed","Identicon","size","rest","ref","useRef","useEffect","current","innerHTML","appendChild","Jazzicon","parseInt","style","width","height","Wallet","amount","symbol","destroy","Dropdown","Toggle","variant","align","id","Spinner","animation","Menu","Item","href","target","Stack","direction","gap","Divider","as","onClick","Cover","name","connect","backgroundImage","backgroundPosition","backgroundSize","background","backdropFilter","Button","catch","e","console","log","uploadFile","file","Web3Storage","token","process","put","makeFileObjects","fileName","blob","Blob","JSON","stringify","type","File","trimmedName","trim_name","trim","includes","replaceAll","createNft","minterContract","performActions","description","ipfsImage","ownerAddress","price","kit","defaultAccount","data","image","files","fileCid","url","_price","ethers","utils","parseUnits","String","methods","uploadClassicCar","send","from","safeMint","transaction","uploadFileToWebStorage","rootCid","getNfts","nfts","totalSupply","call","nftsLength","i","nft","Promise","resolve","tokenURI","res","fetchNftMeta","meta","fetchNftOwner","owner","isCarInMarket","market","isCarSold","sold","readClassicCars","classicCar","index","push","Number","all","ipfsUrl","axios","get","parse","ownerOf","buyNft","tokenId","buyClassicCar","value","giftNft","recipientAddress","giftClassicCar","resellNft","newPrice","resellClassicCar","AddNfts","save","useState","setName","setIpfsImage","setDescription","setPrice","show","setShow","handleClose","Modal","onHide","centered","Header","closeButton","Title","Body","Form","Control","placeholder","onChange","imageUrl","alert","Footer","disabled","Popup","setData","minWidth","NftCard","changeNftData","buy","useContractKit","nftData","formData","Col","Card","backgroundColor","zIndex","borderRadius","Badge","bg","src","alt","objectFit","Text","contractAdd","cardButton","Loader","role","NftList","setNfts","loading","setLoading","getAssets","useCallback","allNfts","error","addAsset","toast","changeAsset","buyAsset","Add","Row","xs","sm","lg","map","_nft","useMinterContract","abi","contractAddress","getConnectedKit","contract","setContract","getContract","web3","eth","Contract","useContract","ClassicCarsAbi","ClassicCarsContractAddress","ClassicCars","App","balance","setBalance","getBalance","getTotalBalance","useBalance","Container","fluid","Nav","CELO","updateBalance","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","networks","Alfajores","network","NetworkNames","rpcUrl","graphQl","explorer","chainId","dapp","document","getElementById"],"mappings":"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","file":"static/js/main.7aba2e27.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nconst Notification = () => (\r\n  <ToastContainer\r\n    position=\"bottom-center\"\r\n    autoClose={5000}\r\n    hideProgressBar\r\n    newestOnTop\r\n    closeOnClick\r\n    rtl={false}\r\n    pauseOnFocusLoss\r\n    draggable={false}\r\n    pauseOnHover\r\n  />\r\n);\r\n\r\nconst NotificationSuccess = ({ text }) => (\r\n  <div>\r\n    <i className=\"bi bi-check-circle-fill text-success mx-2\" />\r\n    <span className=\"text-secondary mx-1\">{text}</span>\r\n  </div>\r\n);\r\n\r\nconst NotificationError = ({ text }) => (\r\n  <div>\r\n    <i className=\"bi bi-x-circle-fill text-danger mx-2\" />\r\n    <span className=\"text-secondary mx-1\">{text}</span>\r\n  </div>\r\n);\r\n\r\nconst Props = {\r\n  text: PropTypes.string,\r\n};\r\n\r\nconst DefaultProps = {\r\n  text: \"\",\r\n};\r\n\r\nNotificationSuccess.propTypes = Props;\r\nNotificationSuccess.defaultProps = DefaultProps;\r\n\r\nNotificationError.propTypes = Props;\r\nNotificationError.defaultProps = DefaultProps;\r\n\r\nexport { Notification, NotificationSuccess, NotificationError };\r\n","import {ERC20_DECIMALS} from \"./constants\";\r\n\r\n// format a wallet address\r\nexport const truncateAddress = (address) => {\r\n    if (!address) return\r\n    return address.slice(0, 5) + \"...\" + address.slice(address.length - 4, address.length);\r\n}\r\n\r\n// convert from big number\r\nexport const formatBigNumber = (num) => {\r\n    if (!num) return\r\n    return num.shiftedBy(-ERC20_DECIMALS).toFixed(2);\r\n}","const ERC20_DECIMALS = 18;\r\nexport { ERC20_DECIMALS };\r\n","import { useEffect, useRef } from \"react\";\r\nimport Jazzicon from \"@metamask/jazzicon\";\r\n\r\nexport default function Identicon({ address, size, ...rest }) {\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    if (address && ref.current) {\r\n      ref.current.innerHTML = \"\";\r\n      ref.current.appendChild(\r\n        Jazzicon(size, parseInt(address.slice(2, 10), 16))\r\n      );\r\n    }\r\n  }, [address, size]);\r\n\r\n  return (\r\n    <div {...rest}>\r\n      <div ref={ref} style={{ width: `${size}px`, height: `${size}px` }} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Dropdown, Stack, Spinner } from \"react-bootstrap\";\r\nimport { formatBigNumber, truncateAddress } from \"./../utils\";\r\nimport Identicon from \"./ui/Identicon\";\r\n\r\nconst Wallet = ({ address, amount, symbol, destroy }) => {\r\n  if (address) {\r\n    return (\r\n      <>\r\n        <Dropdown>\r\n          <Dropdown.Toggle\r\n            variant=\"light\"\r\n            align=\"end\"\r\n            id=\"dropdown-basic\"\r\n            className=\"d-flex align-items-center border rounded-pill py-1\"\r\n          >\r\n            {amount ? (\r\n              <>\r\n                {formatBigNumber(amount)}{\" \"}\r\n                <span className=\"ms-1\"> {symbol}</span>\r\n              </>\r\n            ) : (\r\n              <Spinner animation=\"border\" size=\"sm\" className=\"opacity-25\" />\r\n            )}\r\n            <Identicon address={address} size={28} className=\"ms-2 me-1\" />\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu className=\"shadow-lg border-0\">\r\n            <Dropdown.Item\r\n              href={`https://alfajores-blockscout.celo-testnet.org/address/${address}/transactions`}\r\n              target=\"_blank\"\r\n            >\r\n              <Stack direction=\"horizontal\" gap={2}>\r\n                <i className=\"bi bi-person-circle fs-4\" />\r\n                <span className=\"font-monospace\">\r\n                  {truncateAddress(address)}\r\n                </span>\r\n              </Stack>\r\n            </Dropdown.Item>\r\n            <Dropdown.Divider />\r\n            <Dropdown.Item\r\n              as=\"button\"\r\n              className=\"d-flex align-items-center\"\r\n              onClick={() => {\r\n                destroy();\r\n              }}\r\n            >\r\n              <i className=\"bi bi-box-arrow-right me-2 fs-4\" />\r\n              Disconnect\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default Wallet;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Cover = ({ name, connect }) => {\r\n  if (name) {\r\n    return (\r\n      <div\r\n        className=\"d-flex justify-content-center flex-column text-center \"\r\n        style={{\r\n          backgroundImage: \"url('https://cdn.wallpapersafari.com/50/9/e3DlRx.jpg')\",\r\n          backgroundPosition: \"center\",\r\n          backgroundSize: \"cover\",\r\n          height: \"100vh\"\r\n        }}\r\n      >\r\n        <div\r\n          className=\"text-light position-absolute start-0 top-0 h-100 d-flex justify-content-center align-items-center\"\r\n          style={{\r\n            background: \"rgba(255,255,255,0.3)\",\r\n            backdropFilter: \"blur(10px)\",\r\n            width: \"40%\"\r\n          }}\r\n        >\r\n          <div className=\"px-5 text-start\">\r\n            <h1 className=\"mb-3\">{name}</h1>\r\n            <p>\r\n              The reductive nature of this design is free from<br></br>\r\n              superfluous detail, resulting in a form that has<br></br>\r\n              breathtaking modernity. This is the most desirable<br></br>\r\n              classic cars collection ever made\r\n            </p>\r\n            <Button\r\n              onClick={() => connect().catch((e) => console.log(e))}\r\n              variant=\"outline-light\"\r\n              className=\"px-3 mt-4\"\r\n            >\r\n              Connect Wallet\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nCover.propTypes = {\r\n  name: PropTypes.string,\r\n};\r\n\r\nCover.defaultProps = {\r\n  name: \"\",\r\n};\r\n\r\nexport default Cover;\r\n","import { Web3Storage } from 'web3.storage/dist/bundle.esm.min.js'\r\nimport axios from \"axios\";\r\nimport { ethers } from \"ethers\";\r\n\r\nfunction getAccessToken () {\r\n  // If you're just testing, you can paste in a token\r\n  // and uncomment the following line:\r\n  // return \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweGExYjVlODFDMDQyNWNiNzAxMUUwQTJEZTZBMEYwZmY1MzM1RTQ4YzciLCJpc3MiOiJ3ZWIzLXN0b3JhZ2UiLCJpYXQiOjE2NjM3OTg4OTYwNDYsIm5hbWUiOiJDbGFzc2ljIENhcnMifQ.cR2UY0OMvA8t-B1qTPKBKgGUkWyx_TW8OBEM_x9V9_A\"\r\n\r\n  // In a real app, it's better to read an access token from an\r\n  // environement variable or other configuration that's kept outside of\r\n  // your code base. For this to work, you need to set the\r\n  // WEB3STORAGE_TOKEN environment variable before you run your code.\r\n  // return process.env.WEB3STORAGE_TOKEN\r\n  return process.env.REACT_APP_STORAGE_API_KEY\r\n}\r\n\r\nfunction makeStorageClient () {\r\n  return new Web3Storage({ token: getAccessToken() })\r\n}\r\n// const client = makeStorageClient();\r\n\r\nfunction uploadFile (file) {\r\n  const client = makeStorageClient();\r\n  const fileCid = client.put(file);\r\n  return fileCid;\r\n}\r\n\r\nfunction makeFileObjects (file, fileName) {\r\n  const blob = new Blob([JSON.stringify(file)], { type: \"application/json\" })\r\n  const files = [new File([blob], `${fileName}.json`)]\r\n  return files\r\n}\r\n\r\nfunction trimmedName (name) {\r\n  let file_name;\r\n  const trim_name = name.trim() // removes extra whitespaces\r\n  if(trim_name.includes(\" \")) {\r\n    file_name = trim_name.replaceAll(\" \", \"%20\")\r\n    return file_name\r\n  }\r\n  return trim_name\r\n}\r\n\r\nexport const createNft = async (\r\n  minterContract,\r\n  performActions,\r\n  { name, description, ipfsImage, ownerAddress, price }\r\n) => {\r\n  await performActions(async (kit) => {\r\n    if (!name || !description || !ipfsImage || !price) return;\r\n    const { defaultAccount } = kit;\r\n    \r\n    // convert NFT metadata to JSON format\r\n    const data = JSON.stringify({\r\n      name,\r\n      description,\r\n      image: ipfsImage\r\n    });\r\n\r\n    try {\r\n      // save NFT metadata to IPFS\r\n      const fileName = trimmedName(name);\r\n      const files = makeFileObjects(data, name);\r\n      const fileCid = await uploadFile(files);\r\n\r\n      const url = `https://${fileCid}.ipfs.w3s.link/${fileName}.json`;\r\n      const _price = ethers.utils.parseUnits(String(price), \"ether\");\r\n\r\n      // mint the NFT and save the IPFS url to the blockchain\r\n      await minterContract.methods.uploadClassicCar(name, ipfsImage, description, _price).send({from: defaultAccount});\r\n      let transaction = await minterContract.methods.safeMint(defaultAccount, url).send({ from: defaultAccount });\r\n\r\n      return transaction;\r\n    } catch (error) {\r\n      console.log(\"Error uploading file: \", error);\r\n    }\r\n  });\r\n};\r\n\r\nexport const uploadFileToWebStorage = async (e) => {\r\n  const file = e.target.files;\r\n  const fileName = file[0].name;\r\n\r\n  if (!file) return;\r\n  // Pack files into a CAR and send to web3.storage\r\n  const rootCid = await uploadFile(file) // Promise<CIDString>\r\n  const url = `https://${rootCid}.ipfs.w3s.link/${fileName}`\r\n\r\n  return url;\r\n};\r\n\r\nexport const getNfts = async (minterContract) => {\r\n  try {\r\n    const nfts = [];\r\n    const nftsLength = await minterContract.methods.totalSupply().call();\r\n    for (let i = 0; i < Number(nftsLength); i++) {\r\n      const nft = new Promise(async (resolve) => {\r\n        const res = await minterContract.methods.tokenURI(i).call();\r\n        const meta = await fetchNftMeta(res);\r\n        const owner = await fetchNftOwner(minterContract, i);\r\n        const market = await minterContract.methods.isCarInMarket(i).call();\r\n        const sold = await minterContract.methods.isCarSold(i).call();\r\n        const classicCar = await minterContract.methods.readClassicCars(i).call();\r\n\r\n        resolve({\r\n          index: i,\r\n          owner,\r\n          name: meta.name,\r\n          image: meta.image,\r\n          description: meta.description,\r\n          price: classicCar[5],\r\n          sold,\r\n          market\r\n        });\r\n      });\r\n      nfts.push(nft);\r\n    }\r\n    return Promise.all(nfts);\r\n  } catch (e) {\r\n    console.log({ e });\r\n  }\r\n};\r\n\r\nexport const fetchNftMeta = async (ipfsUrl) => {\r\n  try {\r\n    if (!ipfsUrl) return null;\r\n    console.log(\"Getting data\")\r\n    const meta = await axios.get(ipfsUrl);\r\n    const data = JSON.parse(meta.data)\r\n\r\n    return data;\r\n  } catch (e) {\r\n    console.log({ e });\r\n  }\r\n};\r\n\r\nexport const fetchNftOwner = async (minterContract, index) => {\r\n  try {\r\n    return await minterContract.methods.ownerOf(index).call();\r\n  } catch (e) {\r\n    console.log({ e });\r\n  }\r\n};\r\n\r\nexport async function buyNft (minterContract, tokenId, performActions) {\r\n  try {\r\n    await performActions(async function(kit) {\r\n      const {defaultAccount} = kit\r\n      const classicCar = await minterContract.methods.readClassicCars(tokenId).call();\r\n      await minterContract.methods.buyClassicCar(tokenId).send({from: defaultAccount, value: classicCar[5]});\r\n    })\r\n  }\r\n  catch(err) {\r\n    console.log(err)\r\n  }\r\n};\r\n\r\nexport async function giftNft (minterContract, tokenId, recipientAddress, performActions) {\r\n  try {\r\n    await performActions(async function(kit) {\r\n      const {defaultAccount} = kit\r\n      await minterContract.methods.giftClassicCar(tokenId, recipientAddress).send({from: defaultAccount});\r\n    })\r\n  }\r\n  catch(err) {\r\n    console.log(err)\r\n  }\r\n};\r\n\r\nexport async function resellNft (minterContract, tokenId, newPrice, performActions) {\r\n  try {\r\n    await performActions(async function(kit) {\r\n      const {defaultAccount} = kit\r\n      await minterContract.methods.resellClassicCar(tokenId, newPrice).send({from: defaultAccount});\r\n    })\r\n  }\r\n  catch(err) {\r\n    console.log(err)\r\n  }\r\n};","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Modal, Form } from \"react-bootstrap\";\r\nimport { uploadFileToWebStorage } from \"../../../utils/minter\";\r\n\r\nconst AddNfts = ({ save, address }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [ipfsImage, setIpfsImage] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n\r\n  // check if all form data has been filled\r\n  const isFormFilled = () =>\r\n  name && ipfsImage && description && price;\r\n  \r\n  // close the popup modal\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n  \r\n    // display the popup modal\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={handleShow}\r\n        variant=\"dark\"\r\n        className=\"rounded-pill px-0\"\r\n        style={{ width: \"38px\" }}\r\n      >\r\n        <i className=\"bi bi-plus\"></i>\r\n      </Button>\r\n\r\n        {/* Modal */}\r\n      <Modal show={show} onHide={handleClose} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Create Classic Car NFT</Modal.Title>\r\n        </Modal.Header>\r\n  \r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Control\r\n              type=\"text\"\r\n              className=\"mb-3\"\r\n              placeholder=\"Name\"\r\n              style={{ height: \"45px\" }}\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n              }}\r\n            />\r\n            \r\n            <Form.Control\r\n              as=\"textarea\"\r\n              className=\"mb-3\"\r\n              placeholder=\"Description\"\r\n              style={{ height: \"80px\" }}\r\n              onChange={(e) => {\r\n                setDescription(e.target.value);\r\n              }}\r\n            />\r\n  \r\n            <Form.Control\r\n              type=\"file\"\r\n              className={\"mb-3\"}\r\n              onChange={async (e) => {\r\n                console.log(e)\r\n                const imageUrl = await uploadFileToWebStorage(e);\r\n                console.log(`Image URL: ${imageUrl}`)\r\n                if (!imageUrl) {\r\n                  alert(\"failed to upload image\");\r\n                  return;\r\n                }\r\n                setIpfsImage(imageUrl);\r\n              }}\r\n              placeholder=\"Product name\"\r\n            />\r\n\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Price\"\r\n              style={{ height: \"45px\" }}\r\n              onChange={(e) => {\r\n                setPrice(e.target.value);\r\n              }}\r\n            />\r\n          </Form>\r\n        </Modal.Body>\r\n  \r\n        <Modal.Footer>\r\n          <Button variant=\"outline-primary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            disabled={!isFormFilled()}\r\n            onClick={() => {\r\n              save({\r\n                name,\r\n                ipfsImage,\r\n                description,\r\n                ownerAddress: address,\r\n                price\r\n              });\r\n              handleClose();\r\n            }}\r\n          >\r\n            Create NFT\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nAddNfts.propTypes = {\r\n  save: PropTypes.func.isRequired,\r\n  address: PropTypes.string.isRequired,\r\n};\r\n  \r\nexport default AddNfts;","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Modal, Form } from \"react-bootstrap\";\r\n\r\nconst Popup = ({ save, name }) => {\r\n  const [data, setData] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n\r\n  // check if all form data has been filled\r\n  const isFormFilled = () => data\r\n  \r\n  // close the popup modal\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n  \r\n    // display the popup modal\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={handleShow}\r\n        variant=\"primary\"\r\n        style={{ minWidth: \"70px\"}}\r\n      >\r\n        {name}\r\n      </Button>\r\n\r\n        {/* Modal */}\r\n      <Modal show={show} onHide={handleClose} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{name} Classic Car NFT</Modal.Title>\r\n        </Modal.Header>\r\n  \r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder={name}\r\n              style={{ height: \"45px\" }}\r\n              onChange={(e) => {\r\n                setData(e.target.value);\r\n              }}\r\n            />\r\n          </Form>\r\n        </Modal.Body>\r\n  \r\n        <Modal.Footer>\r\n          <Button variant=\"outline-primary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            disabled={!isFormFilled()}\r\n            onClick={() => {\r\n              save({\r\n                data,\r\n                name\r\n              });\r\n              handleClose();\r\n            }}\r\n          >\r\n            {name} NFT\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nPopup.propTypes = {\r\n  save: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n  \r\nexport default Popup;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Card, Col, Badge, Stack, Button } from \"react-bootstrap\";\r\nimport { truncateAddress } from \"../../../utils\";\r\nimport Identicon from \"../../ui/Identicon\";\r\nimport Popup from \"./Popup\";\r\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\r\n\r\nconst NftCard = ({ nft, changeNftData, buy }) => {\r\n  const { image, description, owner, name, index, price, sold, market } = nft;\r\n  const { kit } = useContractKit();\r\n  const { defaultAccount } = kit;\r\n\r\n  function cardButton(owner, contractAdd, sold, market, price) {\r\n    if(owner === contractAdd) {\r\n      if(market) { return <Popup save={nftData} name={`Gift ${price / 10**18}cUSD`} /> }\r\n      else if (!market) {\r\n        return <div className=\"d-flex justify-content-center gap-3\"><Popup save={nftData} name={`Gift ${price / 10**18}cUSD`} /><Popup save={nftData} name=\"Resell\" /></div>\r\n      }\r\n    }\r\n    else if (owner !== contractAdd) {\r\n      if(sold) { return <Button variant=\"primary\" style={{ minWidth: \"70px\"}}>Sold</Button> }\r\n      else if(!sold) { return <Button variant=\"primary\" style={{ minWidth: \"70px\"}} onClick={()=> {buy({index})}}>Buy { price / 10**18 }cUSD</Button> }\r\n    }\r\n  }\r\n  \r\n  async function nftData(formData) {\r\n    changeNftData({\r\n      ...formData,\r\n      index\r\n    })\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    <Col key={index}>\r\n      <Card className=\"h-100 position-relative\">\r\n        { sold && (owner !== defaultAccount) ? (\r\n          <div\r\n            className=\"position-absolute top-0 start-0 w-100 h-100\"\r\n            style={{ backgroundColor: \"#ffffffd7\", zIndex: \"2\", borderRadius: \"inherit\"}}\r\n          >\r\n          </div>\r\n          ) : (\r\n            \"\"\r\n          )\r\n        }\r\n        <Card.Header>\r\n          <Stack direction=\"horizontal\" gap={2}>\r\n            <Identicon address={owner} size={28} />\r\n            <span className=\"font-monospace text-secondary\">\r\n              {truncateAddress(owner)}\r\n            </span>\r\n            <Badge bg=\"secondary\" className=\"ms-auto\">\r\n              {index} ID\r\n            </Badge>\r\n          </Stack>\r\n        </Card.Header>\r\n\r\n        <div className=\" ratio ratio-4x3\">\r\n          <img src={image} alt={description} style={{ objectFit: \"cover\" }} />\r\n        </div>\r\n\r\n        <Card.Body className=\"d-flex flex-column text-center\">\r\n          <Card.Title className=\"text-capitalize\">{name}</Card.Title>\r\n          <Card.Text className=\"flex-grow-1 text-capitalize\">{description}</Card.Text>\r\n        </Card.Body>\r\n        <Card.Footer className=\"d-flex justify-content-center gap-3\">\r\n          { cardButton(owner, defaultAccount, sold, market, price) }\r\n        </Card.Footer>\r\n      </Card>\r\n    </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nNftCard.propTypes = {\r\n  // props passed into this component\r\n  nft: PropTypes.instanceOf(Object).isRequired,\r\n};\r\n\r\nexport default NftCard;","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst Loader = () => (\r\n  <div className=\"d-flex justify-content-center\">\r\n    <Spinner animation=\"border\" role=\"status\" className=\"opacity-25\">\r\n      <span className=\"visually-hidden\">Loading...</span>\r\n    </Spinner>\r\n  </div>\r\n);\r\nexport default Loader;\r\n","import { useContractKit } from \"@celo-tools/use-contractkit\";\r\nimport React, { useEffect, useState, useCallback } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport PropTypes from \"prop-types\";\r\nimport AddNfts from \"./Add\";\r\nimport Nft from \"./Card\";\r\nimport Loader from \"../../ui/Loader\";\r\nimport { NotificationSuccess, NotificationError } from \"../../ui/Notifications\";\r\nimport {\r\n  getNfts,\r\n  createNft,\r\n  buyNft,\r\n  giftNft,\r\n  resellNft\r\n} from \"../../../utils/minter\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport { ethers } from \"ethers\";\r\n\r\nconst NftList = ({ minterContract, name }) => {\r\n  const { performActions, address } = useContractKit();\r\n  const [nfts, setNfts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getAssets = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      const allNfts = await getNfts(minterContract);\r\n      if (!allNfts) return;\r\n      setNfts(allNfts);\r\n    } catch (error) {\r\n      console.log({ error });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [minterContract]);\r\n\r\n  const addAsset = async (data) => {\r\n    try {\r\n      setLoading(true);\r\n      await createNft(minterContract, performActions, data);\r\n      toast(<NotificationSuccess text=\"Updating NFT list....\" />);\r\n      getAssets();\r\n    } catch (error) {\r\n      console.log({ error });\r\n      toast(<NotificationError text=\"Failed to create an NFT.\" />);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  async function changeAsset(formData) {\r\n    console.log(formData);\r\n    const {data, name, index} = formData;\r\n\r\n    if(name === \"Gift\") {\r\n      console.log(`Gift index of ${index}, to: ${data}`)\r\n      await giftNft(minterContract, index, data, performActions);\r\n\r\n      getAssets();\r\n    }\r\n    \r\n    else if(name === \"Resell\") {\r\n      // const sellPrice = Number(data)\r\n      const price = ethers.utils.parseUnits(String(data), \"ether\");\r\n      console.log(`Resell index of ${index}, at ${price}`)\r\n      await resellNft(minterContract, index, price, performActions)\r\n\r\n      getAssets();\r\n    }\r\n  }\r\n\r\n  async function buyAsset(tokenId) {\r\n    const {index} = tokenId\r\n    console.log(index)\r\n    await buyNft(minterContract, index, performActions)\r\n\r\n    getAssets();\r\n  }\r\n  \r\n  useEffect(() => {\r\n    try {\r\n      if (address && minterContract) {\r\n        getAssets();\r\n      }\r\n    } catch (error) {\r\n      console.log({ error });\r\n    }\r\n  }, [minterContract, address, getAssets]);\r\n\r\n  if (address) {\r\n    return (\r\n      <>\r\n        {!loading ? (\r\n          <>\r\n            <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n              <h1 className=\"fs-4 fw-bold mb-0\">{name}</h1>\r\n              {address ? (\r\n                <AddNfts save={addAsset} address={address} />\r\n              ) : null}\r\n            </div>\r\n            <Row xs={1} sm={2} lg={3} className=\"g-3  mb-5 g-xl-4 g-xxl-5\">\r\n              {nfts.map((_nft) => (\r\n                <Nft\r\n                  key={_nft.index}\r\n                  nft={{\r\n                    ..._nft,\r\n                  }}\r\n                  changeNftData={changeAsset}\r\n                  buy={buyAsset}\r\n                />\r\n              ))}\r\n            </Row>\r\n          </>\r\n        ) : (\r\n          <Loader />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nNftList.propTypes = {\r\n  minterContract: PropTypes.instanceOf(Object),\r\n  updateBalance: PropTypes.func.isRequired,\r\n};\r\n\r\nNftList.defaultProps = {\r\n  minterContract: null,\r\n};\r\n\r\nexport default NftList;","import { useContract } from \"./useContract\";\r\nimport ClassicCarsAbi from \"../contracts/ClassicCars.json\";\r\nimport ClassicCarsContractAddress from \"../contracts/ClassicCars-address.json\";\r\n\r\nexport const useMinterContract = () =>\r\n  useContract(ClassicCarsAbi.abi, ClassicCarsContractAddress.ClassicCars);\r\n  ","import { useState, useEffect, useCallback } from \"react\";\r\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\r\n\r\nexport const useContract = (abi, contractAddress) => {\r\n  const { getConnectedKit, address } = useContractKit();\r\n  const [contract, setContract] = useState(null);\r\n\r\n  const getContract = useCallback(async () => {\r\n    const kit = await getConnectedKit();\r\n    setContract(new kit.web3.eth.Contract(abi, contractAddress));\r\n  }, [getConnectedKit, abi, contractAddress]);\r\n\r\n  useEffect(() => {\r\n    if (address) getContract();\r\n  }, [address, getContract]);\r\n\r\n  return contract;\r\n};\r\n","import React from \"react\";\r\nimport { Container, Nav } from \"react-bootstrap\";\r\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\r\nimport { Notification } from \"./components/ui/Notifications\";\r\nimport Wallet from \"./components/Wallet\";\r\nimport Cover from \"./components/minter/Cover\";\r\nimport Nfts from \"./components/minter/nfts\";\r\nimport { useBalance, useMinterContract } from \"./hooks\";\r\nimport \"./App.css\";\r\n\r\nconst App = function AppWrapper() {\r\n  const { address, destroy, connect } = useContractKit();\r\n  const { balance, getBalance } = useBalance();\r\n  const minterContract = useMinterContract();\r\n  const name = \"Classic Cars Collection\";\r\n\r\n  return (\r\n    <>\r\n      <Notification />\r\n      {address ? (\r\n        <Container fluid=\"md\">\r\n          <Nav className=\"justify-content-end pt-3 pb-5\">\r\n            <Nav.Item>\r\n              <Wallet\r\n                address={address}\r\n                amount={balance.CELO}\r\n                symbol=\"CELO\"\r\n                destroy={destroy}\r\n              />\r\n            </Nav.Item>\r\n          </Nav>\r\n          <main>\r\n            <Nfts\r\n              name={name}\r\n              updateBalance={getBalance}\r\n              minterContract={minterContract}\r\n            />\r\n          </main>\r\n        </Container>\r\n      ) : (\r\n        <Cover name={name} connect={connect} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\r\n\r\nexport const useBalance = () => {\r\n  const { address, kit } = useContractKit();\r\n  const [balance, setBalance] = useState(0);\r\n\r\n  const getBalance = useCallback(async () => {\r\n    // fetch a connected wallet token balance\r\n    const value = await kit.getTotalBalance(address);\r\n    setBalance(value);\r\n  }, [address, kit]);\r\n\r\n  useEffect(() => {\r\n    if (address) getBalance();\r\n  }, [address, getBalance]);\r\n\r\n  return {\r\n    balance,\r\n    getBalance,\r\n  };\r\n};\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS, getFID, getFCP, getLCP, getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {\r\n  ContractKitProvider,\r\n  Alfajores,\r\n  NetworkNames,\r\n} from \"@celo-tools/use-contractkit\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"@celo-tools/use-contractkit/lib/styles.css\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ContractKitProvider\r\n      networks={[Alfajores]}\r\n      network={{\r\n        name: NetworkNames.Alfajores,\r\n        rpcUrl: \"https://alfajores-forno.celo-testnet.org\",\r\n        graphQl: \"https://alfajores-blockscout.celo-testnet.org/graphiql\",\r\n        explorer: \"https://alfajores-blockscout.celo-testnet.org\",\r\n        chainId: 44787,\r\n      }}\r\n      dapp={{\r\n        name: \"Classic Cars\",\r\n        description: \"An NFT Marketplace for Classic Cars\",\r\n      }}\r\n    >\r\n      <App />\r\n    </ContractKitProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}